# Redirect HTTP to HTTPS
#Configuración con dominio
# server {
#     listen 80;
#     server_name tu-dominio.com www.tu-dominio.com;
    
#     # Let's Encrypt challenge
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }
    
#     # Redirect all HTTP traffic to HTTPS
#     location / {
#         return 301 https://$server_name$request_uri;
#     }
# }

# # HTTPS server
# server {
#     listen 443 ssl http2;
#     server_name tu-dominio.com www.tu-dominio.com;
    
#     # SSL Certificates (Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/tu-dominio.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/tu-dominio.com/privkey.pem;
    
#     # SSL Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
    
#     # Security headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
   
#     # Gzip compression
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_proxied any;
#     gzip_comp_level 6;
#     gzip_types
#         text/plain
#         text/css
#         text/xml
#         text/javascript
#         application/json
#         application/javascript
#         application/xml+rss
#         application/atom+xml;

#     # Root directory
#     root /usr/share/nginx/html;
#     index index.html;

#     # Handle React Router (SPA)
#     location / {
#         try_files $uri $uri/ /index.html;
       
#         # Cache static assets
#         location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#             expires 1y;
#             add_header Cache-Control "public, immutable";
#         }
#     }

#     # Proxy API requests to backend
#     location /api/ {
#         proxy_pass http://backend:8080/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto https;
#         proxy_set_header X-Forwarded-Port 443;
       
#         # CORS headers (ajustado para HTTPS)
#         add_header Access-Control-Allow-Origin https://tu-dominio.com;
#         add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
#         add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
#         add_header Access-Control-Allow-Credentials true;
       
#         # Handle preflight requests
#         if ($request_method = 'OPTIONS') {
#             add_header Access-Control-Allow-Origin https://tu-dominio.com;
#             add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
#             add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
#             add_header Access-Control-Max-Age 1728000;
#             add_header Content-Type 'text/plain; charset=utf-8';
#             add_header Content-Length 0;
#             return 204;
#         }
#     }

#     # WebSocket proxy (WSS)
#     location /ws/ {
#         proxy_pass http://backend:8080/ws/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "Upgrade";
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto https;
#         proxy_cache_bypass $http_upgrade;
#         proxy_read_timeout 86400;
#     }

#     # Health check endpoint
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
# }

server {
  listen 80;
  server_name _;

  # --- Seguridad (opcional, recomendable)
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;

  # --- GZIP (opcional, recomendable)
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_comp_level 6;
  gzip_types
      text/plain
      text/css
      text/xml
      text/javascript
      application/json
      application/javascript
      application/xml+rss
      application/atom+xml
      font/ttf
      font/otf
      application/font-woff
      application/font-woff2;

  # --- Archivos del build
  root /usr/share/nginx/html;
  index index.html;

  # SPA
  location / {
    try_files $uri $uri/ /index.html;
  }

  location = /index.html {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires -1;
  }

  # Estáticos con cache larga
  location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # Proxy API -> backend (mismo origen, sin CORS)
  location /api/ {
    proxy_pass http://backend:8080/;  # /api/foo -> backend:8080/foo
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
  }

  # WebSocket
  location /ws {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://backend:8080/ws;
  }

  # Health
  location /health {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "healthy\n";
  }
}
