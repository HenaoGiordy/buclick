server {
  listen 80;
  server_name giordydev.online www.giordydev.online;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  # --- Seguridad (opcional, recomendable)
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;

  # --- GZIP (opcional, recomendable)
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_comp_level 6;
  gzip_types
      text/plain
      text/css
      text/xml
      text/javascript
      application/json
      application/javascript
      application/xml+rss
      application/atom+xml
      font/ttf
      font/otf
      application/font-woff
      application/font-woff2;

  # --- Archivos del build
  root /usr/share/nginx/html;
  index index.html;

  # SPA
  location / {
    return 301 https://$host$request_uri;
  }

  location = /index.html {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires -1;
  }

  # Estáticos con cache larga
  location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
  }
  # Health
  location /health {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "healthy\n";
  }
}

server {
  listen 443 ssl http2;
  server_name giordydev.online www.giordydev.online;
  ssl_certificate     /etc/letsencrypt/live/giordydev.online/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/giordydev.online/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # --- Seguridad (opcional, recomendable)
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;

  # --- GZIP (opcional, recomendable)
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_comp_level 6;
  gzip_types
      text/plain
      text/css
      text/xml
      text/javascript
      application/json
      application/javascript
      application/xml+rss
      application/atom+xml
      font/ttf
      font/otf
      application/font-woff
      application/font-woff2;

  # --- Archivos del build
  root /usr/share/nginx/html;
  index index.html;

  # SPA
  location / {
    try_files $uri $uri/ /index.html;
  }

  location = /index.html {
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires -1;
  }

  # Estáticos con cache larga
  location ~* \.(?:js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # Proxy API -> backend (mismo origen, sin CORS)
  location /api/ {
    proxy_pass http://backend:8080/;  # /api/foo -> backend:8080/foo
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
  }

  # WebSocket
  location /ws {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://backend:8080/ws;
  }

  # Health
  location /health {
    access_log off;
    add_header Content-Type text/plain;
    return 200 "healthy\n";
  }
}
